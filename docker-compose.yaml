services:
  nifi-node:
    image: apache/nifi
    hostname: nifi-ingestion
    ports:
      - "8443:8443"
      - "4883:4883"
    networks:
      - flink-net
    volumes:
      - ./cluster-producers/data-sources:/nifi-data
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=password1234
      - NIFI_WEB_HTTP_PORT=4883
      - NIFI_SECURITY_USER_AUTHORIZER=managed-authorizer
      - NIFI_SECURITY_ALWAYS_USE_SECURE_PROTOCOL=false

  #### KAFKA ####

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - flink-net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - flink-net
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - flink-net
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-1
    networks:
      - flink-net
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  kafka-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-2
    networks:
      - flink-net
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: 2
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  kafka-3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-3
    networks:
      - flink-net
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: 3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  jobmanager:
    image: flink:latest
    networks:
      - flink-net
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
        metrics.reporter.promgateway.jobName: FlinkStream
      - |
        KAFKA_BOOTSTRAP_SERVERS=kafka-1:19092,kafka-2:19093,kafka-3:19094
      - |
        CONSUMER_GROUP_ID=dsp-consumer
      - |
        FLINK_TOPIC=dsp-flink
    volumes:
      - ./tmp/dspflink/checkpoint:/tmp/dspflink/checkpoint
      - ./results:/results/queries/query1
      - ./results:/results/queries/query2

  taskmanager:
    image: flink:latest
    networks:
      - flink-net
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 6
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.latency.interval: 1000
        metrics.reporter.prom.port: 9249
        metrics.reporter.promgateway.jobName: FlinkStream
      - |
        KAFKA_BOOTSTRAP_SERVERS=kafka-1:19092,kafka-2:19093,kafka-3:19094
      - |
        CONSUMER_GROUP_ID=dsp-consumer
      - |
        FLINK_TOPIC=dsp-flink
    volumes:
      - ./tmp/dspflink/checkpoint:/tmp/dspflink/checkpoint
      - ./results/query1:/results/queries/query1
      - ./results/query2:/results/queries/query2
  prometheus:
    image: flink-prometheus
    ports:
      - "9010:9010"
      - "9090:9090"
    networks:
      - flink-net
    tty: true
    volumes:
      - ./prometheus/data:/prometheus/data

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - flink-net
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

networks:
  flink-net:
    driver: bridge
